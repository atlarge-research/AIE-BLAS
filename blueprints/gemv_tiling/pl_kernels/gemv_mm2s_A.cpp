// This file was auto-generated by aieblas on 2024-7-19 at 13:38

#include <ap_int.h>
#include <hls_stream.h>
#include <ap_axi_sdata.h>

#define Tm 64
#define Tn 64

extern "C" {
void gemv_mm2s_A(ap_int<32> *mem_A, int m, int n,
                 hls::stream<qdma_axis<32, 0, 0, 0>> &stream_A) {
#pragma HLS interface m_axi port = mem_A offset = slave
#pragma HLS interface axis port = stream_A
#pragma HLS INTERFACE s_axilite port = mem_A bundle = control
#pragma HLS INTERFACE s_axilite port = m bundle = control
#pragma HLS INTERFACE s_axilite port = n bundle = control
#pragma HLS interface s_axilite port = return bundle = control

    int chunks_m = m / Tm;
    int chunks_n = n / Tn;

    // Send data over stream
    for (int i = 0; i < m * n; i++) {
        #pragma HLS pipeline II = 1
        int idx_m = (i / (Tm * Tn)) / chunks_n;
        int idx_n = (i / (Tm * Tn)) % chunks_n;
        int idx_tm = (i % (Tm * Tn)) / Tm;
        int idx_tn = (i % (Tm * Tn)) % Tm;

        qdma_axis<32,0,0,0> A;
        A.data = mem_A[(idx_m * Tm + idx_tm) * n + idx_n * Tn + idx_tn];
        A.keep_all();
        stream_A.write(A);
    }
}
}
