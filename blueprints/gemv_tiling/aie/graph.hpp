// This file was auto-generated by aieblas on 2024-7-19 at 13:38

#include <adf.h>
#include "kernels/gemv.hpp"

using namespace adf;

class simpleGraph : public graph {
private:
    kernel gemvk;

public:
    input_plio gemv_scalar;
    input_plio gemv_A;
    input_plio gemv_x;
    input_plio gemv_y;
    output_plio gemv_out;

    simpleGraph() {
        // initialize gemv
        gemv_scalar = input_plio::create("gemv_scalar", plio_32_bits, "data/gemv_scalar.txt");
        gemv_A = input_plio::create("gemv_A", plio_32_bits, "data/gemv_A.txt");
        gemv_x = input_plio::create("gemv_x", plio_32_bits, "data/gemv_x.txt");
        gemv_y = input_plio::create("gemv_y", plio_32_bits, "data/gemv_y.txt");
        gemv_out = output_plio::create("gemv_out", plio_32_bits, "data/gemv_out.txt");

        gemvk = kernel::create(gemv);

        // connect gemv
        connect<stream> net0(gemv_scalar.out[0], gemvk.in[0]);
        connect<window<256>> net1(gemv_A.out[0], gemvk.in[1]);
        connect<window<256>> net2(gemv_x.out[0], async(gemvk.in[2]));
        connect<window<256>> net3(gemv_y.out[0], async(gemvk.in[3]));
        connect<window<256>> net4(async(gemvk.out[0]), gemv_out.in[0]);

        source(gemvk) = "kernels/gemv.cpp";
        runtime<ratio>(gemvk) = 0.9;

    }
};
